<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:ed="clr-namespace:Microsoft.Expression.Shapes;assembly=Microsoft.Expression.Drawing"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="MusicFileManager.App"
             StartupUri="Main.xaml">
    <Application.Resources>             
         
		 <!--Button Style-->
    	<Style x:Key="MFMButtonStyle" TargetType="{x:Type Button}">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Button}">    					
    					<Grid>
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualStateGroup.Transitions>
    									<VisualTransition GeneratedDuration="0:0:0.2"/>
    									<VisualTransition GeneratedDuration="0" To="Pressed"/>
    								</VisualStateGroup.Transitions>
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="MouseOver">
    									<Storyboard>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Animation">
    											<EasingColorKeyFrame KeyTime="0" Value="#FFFF6400"/>
    										</ColorAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Pressed">
    									<Storyboard>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Animation">
    											<EasingColorKeyFrame KeyTime="0" Value="#FF0064FF"/>
    										</ColorAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Disabled">
    									<Storyboard>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Animation">
    											<EasingColorKeyFrame KeyTime="0" Value="#FFC8C8C8"/>
    										</ColorAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Border x:Name="Background" Background="{TemplateBinding BorderBrush}" CornerRadius="10"/>
    						<Border x:Name="Inner" Margin="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="10"/>
    						<Border x:Name="Animation" CornerRadius="10" Margin="{TemplateBinding BorderThickness}" BorderBrush="Black" Background="#00000000"/>
    						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    						<Border x:Name="glow" CornerRadius="10" Margin="{TemplateBinding BorderThickness}">
    							<Border.Background>
    								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    									<GradientStop Color="#00000000" Offset="0"/>
    									<GradientStop Color="#7F000000" Offset="1"/>
    									<GradientStop Color="#99000000" Offset="0.75"/>
    								</LinearGradientBrush>
    							</Border.Background>
    						</Border>
    					</Grid>
    					<ControlTemplate.Triggers>    						
    						<Trigger Property="IsFocused" Value="True"/>
    						<Trigger Property="IsDefaulted" Value="True"/>
    						<Trigger Property="IsMouseOver" Value="True"/>    						
    						<Trigger Property="IsPressed" Value="True"/>
    						<Trigger Property="IsEnabled" Value="False"/>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>

		<!--Slider Style-->
        <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
            <GradientStop Color="white" Offset="0"/>
            <GradientStop Color="#B8E2F9" Offset="0.5"/>
            <GradientStop Color="#B0DFF8" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="HorizontalSliderThumbHoverBorder" Color="#3C7FB1"/>
        <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
            <GradientStop Color="#B8E4FA" Offset="0.25"/>
            <GradientStop Color="#5EB4E3" Offset="0.5"/>
            <GradientStop Color="#4C8BB4" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="HorizontalSliderThumbPressedBorder" Color="#2C628B"/>
        <Geometry x:Key="SliderThumbDisabledGeometry">M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z</Geometry>
        <Geometry x:Key="SliderPointedThumbDisabledGeometry">M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
        <Geometry x:Key="SliderPointedThumbOuterBorderGeometry">M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
        <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
            <GradientStop Color="White" Offset="0"/>
            <GradientStop Color="#F0EFEF" Offset="0.4"/>
            <GradientStop Color="#D6D5D5" Offset=".8"/>
        </LinearGradientBrush>
        <Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z</Geometry>
        <Style x:Key="HorizontalSliderUpThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="180"/>
                                            <TranslateTransform X="5" Y="9"/>
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource HorizontalSliderThumbNormalBackgroundInverted}"/>
                            <Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
                            <Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="Foreground" Value="Blue">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackgroundInverted}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
                                <Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
                                <Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
                                <Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFFFA000" Offset="0"/>
            <GradientStop Color="#FF965A00" Offset="0.4"/>
            <GradientStop Color="#FFC87D00" Offset="0.8"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FF004B96" Offset="0.4"/>
            <GradientStop Color="#FF0057C8" Offset="0.8"/>
            <GradientStop Color="#FF0064FF" Offset="0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="White"/>
            <GradientStop Color="#FFE1E1E1" Offset="1"/>
            <GradientStop Color="#FFC8C8C8" Offset="0.74"/>
        </LinearGradientBrush>
        <Style x:Key="HorizontalSliderDownThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="5" Y="9"/>
                            </Canvas.RenderTransform>
                            <Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource HorizontalSliderThumbNormalBackground}"/>
                            <Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
                            <Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="Foreground" Value="Blue">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
                                <Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
                                <Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
                                <Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFAEB1AF" Offset="0.1"/>
            <GradientStop Color="White" Offset=".9"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBackground" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFFC8A0" Offset="0"/>
            <GradientStop Color="#FFFF6400" Offset="0.15"/>
        </LinearGradientBrush>
        <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Geometry x:Key="SliderThumbOuterBorderGeometry">M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z</Geometry>
        <Geometry x:Key="SliderThumbMiddleBorderGeometry">M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z</Geometry>
        <LinearGradientBrush x:Key="HorizentalSliderThumbGlowBackground" EndPoint="1,1" StartPoint="0,0">
            <GradientStop Color="#FF323232" Offset="0"/>
            <GradientStop Color="#FF969696" Offset="0.5"/>
            <GradientStop Color="#FFC8C8C8" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HorizentalSliderThumbDisabledBackground" EndPoint="0,1" StartPoint="0,0">
        	<GradientStop Color="#FF646464"/>
        	<GradientStop Color="#FF4B4B4B" Offset="1"/>
        	<GradientStop Color="#FF323232" Offset="0.74"/>
        </LinearGradientBrush>
    	<LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="#E1E1E1" Offset="0"/>
    		<GradientStop Color="#EDEDED" Offset="0.20"/>
    		<GradientStop Color="#EDEDED" Offset="0.80"/>
    		<GradientStop Color="#E3E3E3" Offset="1"/>
    	</LinearGradientBrush>
        <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="Width" Value="11"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="5.5" Y="11"/>
                            </Canvas.RenderTransform>
                            <Border x:Name="Background" Height="16" Canvas.Left="-4" Canvas.Top="-8" Width="16" CornerRadius="8" Background="{DynamicResource HorizontalSliderThumbNormalBackground}">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="5" Direction="270" ShadowDepth="2"/>
                                </Border.Effect>
                            </Border>
                            <Ellipse x:Name="Glow" Height="8" Canvas.Left="0" Canvas.Top="-4" Width="8" Fill="{DynamicResource HorizentalSliderThumbGlowBackground}"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                            	<Setter Property="Background" TargetName="Background" Value="{DynamicResource HorizontalSliderThumbHoverBackground}"/>
                            </Trigger>
                            <Trigger Property="Foreground" Value="Blue"/>
                            <Trigger Property="IsDragging" Value="true">
                            	<Setter Property="Background" TargetName="Background" Value="{DynamicResource HorizontalSliderThumbPressedBackground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                            	<Setter Property="Background" TargetName="Background" Value="{DynamicResource HorizentalSliderThumbDisabledBackground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackground" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="white" Offset="0"/>
            <GradientStop Color="#B8E2F9" Offset="0.5"/>
            <GradientStop Color="#B0DFF8" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackground" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="#B8E4FA" Offset="0.25"/>
            <GradientStop Color="#5EB4E3" Offset="0.5"/>
            <GradientStop Color="#4C8BB4" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackground" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="White" Offset="0"/>
            <GradientStop Color="#F0EFEF" Offset="0.4"/>
            <GradientStop Color="#D6D5D5" Offset=".8"/>
        </LinearGradientBrush>
        <Style x:Key="VerticalSliderLeftThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Width" Value="18"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform X="9" Y="5"/>
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackground}"/>
                            <Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
                            <Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="Foreground" Value="Blue">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
                                <Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
                                <Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
            <GradientStop Color="white" Offset="0"/>
            <GradientStop Color="#B8E2F9" Offset="0.5"/>
            <GradientStop Color="#B0DFF8" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
            <GradientStop Color="#B8E4FA" Offset="0.25"/>
            <GradientStop Color="#5EB4E3" Offset="0.5"/>
            <GradientStop Color="#4C8BB4" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
            <GradientStop Color="White" Offset="0"/>
            <GradientStop Color="#F0EFEF" Offset="0.4"/>
            <GradientStop Color="#D6D5D5" Offset=".8"/>
        </LinearGradientBrush>
        <Style x:Key="VerticalSliderRightThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Width" Value="18"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform X="9" Y="5"/>
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackgroundInverted}"/>
                            <Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
                            <Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="Foreground" Value="Blue">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackgroundInverted}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
                                <Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
                                <Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="VerticalSliderTrackNormalBorder" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="#FFAEB1AF" Offset="0.1"/>
            <GradientStop Color="White" Offset=".9"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="VerticalSliderThumbGlowBackground" EndPoint="1,0" StartPoint="0,1">
            <GradientStop Color="#FF323232" Offset="0"/>
            <GradientStop Color="#FFC8C8C8" Offset="1"/>
            <GradientStop Color="#FF969696" Offset="0.651"/>
        </LinearGradientBrush>
        <Style x:Key="VerticalSliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="11"/>
            <Setter Property="Width" Value="22"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform X="11" Y="5.5"/>
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Border x:Name="border" Height="16" Width="16" Canvas.Left="-4" Canvas.Top="-8" CornerRadius="8" Background="{DynamicResource HorizontalSliderThumbNormalBackground}">
                                <Border.Effect>
                                    <DropShadowEffect Direction="45" ShadowDepth="2"/>
                                </Border.Effect>
                            </Border>
                            <Ellipse x:Name="Glow" Height="8" Width="8" Canvas.Left="0" Canvas.Top="-4" Fill="{DynamicResource VerticalSliderThumbGlowBackground}"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                            	<Setter Property="Background" TargetName="border" Value="{DynamicResource HorizontalSliderThumbHoverBackground}"/>
                            </Trigger>
                            <Trigger Property="Foreground" Value="Blue"/>
                            <Trigger Property="IsDragging" Value="true">
                            	<Setter Property="Background" TargetName="border" Value="{DynamicResource HorizontalSliderThumbPressedBackground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                            	<Setter Property="Background" TargetName="border" Value="{DynamicResource HorizentalSliderThumbDisabledBackground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="VerticalSliderTrackNormalBackground" EndPoint="1,0.5" StartPoint="0,0.5">
            <GradientStop Color="#FFFFC8A0" Offset="0"/>
            <GradientStop Color="#FFFF6400" Offset="0.15"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HorizentalSliderTrackGlowBackground" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#00000000" Offset="0"/>
            <GradientStop Color="#99000000" Offset="1"/>
            <GradientStop Color="#7F000000" Offset="0.75"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HorizontalSliderTrackDisabledBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        	<GradientStop Color="#FF969696" Offset="0"/>
        	<GradientStop Color="#FF646464" Offset="0.15"/>
        </LinearGradientBrush>
        <Style x:Key="MFMSliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#FFC4C4C4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                                <Border x:Name="TrackBackground" BorderBrush="{DynamicResource HorizontalSliderTrackNormalBorder}" Background="{StaticResource HorizontalSliderTrackNormalBackground}" CornerRadius="5" Height="10" Grid.Row="1" VerticalAlignment="center" Margin="5,0">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="15" Direction="270"/>
                                    </Border.Effect>
                                    <Canvas Margin="-6,-1">
                                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden"/>
                                    </Canvas>
                                </Border>
                                <Border x:Name="TrackGlow" BorderBrush="{x:Null}" Height="10" VerticalAlignment="Center" Width="Auto" Grid.Row="1" CornerRadius="5" Margin="5,0" Background="{DynamicResource HorizentalSliderTrackGlowBackground}"/>
                                <Track x:Name="PART_Track" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyle}" Width="20"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                    		<Trigger Property="IsEnabled" Value="False">
                    			<Setter Property="Background" TargetName="TrackBackground" Value="{DynamicResource HorizontalSliderTrackDisabledBackground}"/>
                    		</Trigger>
                    		<Trigger Property="TickPlacement" Value="TopLeft">
                    			<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    			<Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderUpThumbStyle}"/>
                    			<Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                    			<Setter Property="Margin" TargetName="TrackGlow" Value="5,2,5,0"/>
                    		</Trigger>
                    		<Trigger Property="TickPlacement" Value="BottomRight">
                    			<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    			<Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderDownThumbStyle}"/>
                    			<Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                    		</Trigger>
                    		<Trigger Property="TickPlacement" Value="Both">
                    			<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    			<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    		</Trigger>
                    		<Trigger Property="IsSelectionRangeEnabled" Value="true">
                    			<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                    		</Trigger>
                    		<Trigger Property="IsKeyboardFocused" Value="true">
                    			<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                    		</Trigger>
                    	</ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Slider}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" Width="4"/>
                                        <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Visibility="Collapsed" Width="4"/>
                                        <Border x:Name="TrackBackground" BorderBrush="{StaticResource VerticalSliderTrackNormalBorder}" Background="{DynamicResource VerticalSliderTrackNormalBackground}" Grid.Column="1" CornerRadius="5" HorizontalAlignment="center" Margin="0,5" Width="10">
                                            <Border.Effect>
                                                <DropShadowEffect Direction="270" BlurRadius="15" ShadowDepth="5"/>
                                            </Border.Effect>
                                            <Canvas Margin="-1,-6">
                                                <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden" Width="4.0"/>
                                            </Canvas>
                                        </Border>
                                        <Border x:Name="TrackGlow" HorizontalAlignment="Center" Height="Auto" Margin="0,5" VerticalAlignment="Stretch" Width="10" Grid.Column="1" CornerRadius="5">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                    <GradientStop Color="#00000000" Offset="0"/>
                                                    <GradientStop Color="#99000000" Offset="1"/>
                                                    <GradientStop Color="#7F000000" Offset="0.75"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <Track x:Name="PART_Track" Grid.Column="1">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb x:Name="Thumb" Style="{DynamicResource VerticalSliderThumbStyle}" Height="20"/>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TickPlacement" Value="TopLeft">
                                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                        <Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderLeftThumbStyle}"/>
                                        <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                                    </Trigger>
                                    <Trigger Property="TickPlacement" Value="BottomRight">
                                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                        <Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderRightThumbStyle}"/>
                                        <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                                    </Trigger>
                                    <Trigger Property="TickPlacement" Value="Both">
                                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                        <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="true">
                                        <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>


		<!--CheckBox Style-->
        <SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
        <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
        <Style x:Key="EmptyCheckBoxFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckRadioFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MFMCheckBoxStyle" TargetType="{x:Type CheckBox}">
            <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
			<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                            <BulletDecorator.Bullet>
                                <Grid>
                                    <Border x:Name="Border" Width="15" Height="15" CornerRadius="2" Background="{TemplateBinding BorderBrush}"/>
                                    <Border x:Name="BorderEffect" Width="15" Height="15" CornerRadius="2" d:CopyToken="f702ab23-427f-4672-b14f-8357eab6ffd7" Background="#00C8C8C8"/>
                                    <Border x:Name="BorderGlow" Width="15" Height="15" CornerRadius="2">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#7F000000" Offset="0"/>
                                                <GradientStop Color="#00000000" Offset="1"/>
                                                <GradientStop Color="#99000000" Offset="0.25"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                    <Grid Margin="{TemplateBinding BorderThickness}">
                                        <Border x:Name="Background" CornerRadius="1.5" Background="{TemplateBinding Background}"/>
                                        <Border x:Name="Animation" CornerRadius="1.5" Background="#00C8C8C8"/>
                                        <Path x:Name="CheckMark" Data="M0.87450021,5.0203795 C7.4995078,9.8539046 2.7380779,9.8719586 10.124511,1.7707099" HorizontalAlignment="Left" Height="8.552" Margin="-0.125,0.77,-0.125,0" Stretch="Fill" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" VerticalAlignment="Top" Width="11.25" Visibility="Collapsed"/>
                                        <Path x:Name="CheckMarkEffect" Data="M0.87450021,5.0203795 C7.4995078,9.8539046 2.7380779,9.8719586 10.124511,1.7707099" HorizontalAlignment="Left" Height="8.552" Margin="-0.125,0.77,-0.125,0" Stretch="Fill" StrokeThickness="2" VerticalAlignment="Top" Width="11.25" Stroke="#00C8C8C8" Visibility="Collapsed"/>
                                        <Border x:Name="Glow" CornerRadius="1.5">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#00000000" Offset="0"/>
                                                    <GradientStop Color="#4C000000" Offset="1"/>
                                                    <GradientStop Color="#66000000" Offset="0.75"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                    </Grid>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BorderEffect">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFFF6400"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="CheckMarkEffect">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFFF6400"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BorderEffect">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF0064FF"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="CheckMarkEffect">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF0064FF"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BorderEffect">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFC8C8C8"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="CheckMarkEffect">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFC8C8C8"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMarkEffect">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMarkEffect">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                                <Setter Property="Padding" Value="4,0,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" TargetName="Border" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="BorderEffect" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="CheckMark" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="CheckMarkEffect" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


		<!--ScrollBar Style-->
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
										<VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
										<VisualTransition GeneratedDuration="0:0:0.2"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Arrow">
												<EasingColorKeyFrame KeyTime="0" Value="#FFFF6400"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Arrow">
												<EasingColorKeyFrame KeyTime="0" Value="#FF0064FF"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Arrow">
												<EasingColorKeyFrame KeyTime="0" Value="#FF323232"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Background" CornerRadius="1" Background="#00000000"/>							
							<Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}" Visibility="Collapsed"/>
							<ed:RegularPolygon x:Name="Arrow" Fill="#FFC8C8C8" HorizontalAlignment="Center" Height="8" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="{x:Null}" VerticalAlignment="Center" Width="8" Margin="0,0,0,2">
							</ed:RegularPolygon>
						</Grid>
						<ControlTemplate.Triggers>							
							<Trigger Property="Themes:ScrollChrome.ScrollGlyph" Value="RightArrow" SourceName="Chrome">
								<Setter Property="LayoutTransform" TargetName="Arrow">
									<Setter.Value>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform Angle="90"/>
											<TranslateTransform/>
										</TransformGroup>
									</Setter.Value>
								</Setter>
								<Setter Property="Margin" TargetName="Arrow" Value="1,0,0,0"/>								
							</Trigger>
							<Trigger Property="Themes:ScrollChrome.ScrollGlyph" Value="DownArrow" SourceName="Chrome">
								<Setter Property="LayoutTransform" TargetName="Arrow">
									<Setter.Value>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform Angle="180"/>
											<TranslateTransform/>
										</TransformGroup>
									</Setter.Value>
								</Setter>
								<Setter Property="Margin" TargetName="Arrow" Value="0,2,0,0"/>
							</Trigger>
							<Trigger Property="Themes:ScrollChrome.ScrollGlyph" Value="UpArrow" SourceName="Chrome">	
								<Setter Property="LayoutTransform" TargetName="Arrow">
									<Setter.Value>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform Angle="0"/>
											<TranslateTransform/>
										</TransformGroup>
									</Setter.Value>
								</Setter>							
							</Trigger>
							<Trigger Property="Themes:ScrollChrome.ScrollGlyph" Value="LeftARrow" SourceName="Chrome">
								<Setter Property="LayoutTransform" TargetName="Arrow">
									<Setter.Value>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform Angle="270"/>
											<TranslateTransform/>
										</TransformGroup>
									</Setter.Value>
								</Setter>
								<Setter Property="Margin" TargetName="Arrow" Value="0,0,2,0"/>
							</Trigger>							
						</ControlTemplate.Triggers>						
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.2"/>
										<VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver">
											<Storyboard>
												<ColorAnimation Duration="0:0:0.1" To="#FFFF6400" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
											</Storyboard>
										</VisualTransition>
										<VisualTransition GeneratedDuration="0:0:0.1" To="Pressed">
											<Storyboard>
												<ColorAnimation Duration="0:0:0.1" To="#FF0064FF" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
											</Storyboard>
										</VisualTransition>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
												<EasingColorKeyFrame KeyTime="0" Value="#FFC8C8C8"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
												<EasingColorKeyFrame KeyTime="0" Value="#FFFF6400"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
												<EasingColorKeyFrame KeyTime="0" Value="#FF0064FF"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
												<EasingColorKeyFrame KeyTime="0" Value="#FF646464"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Background" Background="#FF646432" CornerRadius="1"/>
							<Border x:Name="BackgroundGlow" CornerRadius="1">
								<Border.Background>
									<LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
										<GradientStop Color="#33000000" Offset="0"/>
										<GradientStop Color="#99000000" Offset="1"/>
										<GradientStop Color="#7F000000" Offset="0.75"/>
									</LinearGradientBrush>
								</Border.Background></Border>
							<Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsDragging}" SnapsToDevicePixels="true" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}" Visibility="Collapsed"/>
						</Grid>
						<ControlTemplate.Triggers>		
							<Trigger Property="Themes:ScrollChrome.ScrollGlyph" Value="HorizontalGripper" SourceName="Chrome">
								<Setter Property="Background" TargetName="BackgroundGlow">
									<Setter.Value>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#00000000" Offset="0"/>
											<GradientStop Color="#99000000" Offset="1"/>
											<GradientStop Color="#7F000000" Offset="0.75"/>
										</LinearGradientBrush>
									</Setter.Value>
								</Setter>								
							</Trigger>					
						</ControlTemplate.Triggers>						
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>		
		<Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MFMScrollBarStyle" TargetType="{x:Type ScrollBar}">			
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
			<Setter Property="MinWidth" Value="10"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid x:Name="Bg" SnapsToDevicePixels="true">
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
								<RowDefinition Height="0.00001*"/>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
							</Grid.RowDefinitions>
							<Border x:Name="Background" CornerRadius="2" Grid.RowSpan="3">
								<Border.Background>
									<LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
										<GradientStop Color="#FF373737" Offset="0"/>
										<GradientStop Color="#FF505050" Offset="1"/>
										<GradientStop Color="#FF323232" Offset="0.241"/>
									</LinearGradientBrush>
								</Border.Background>
							</Border>
							<RepeatButton x:Name="TopButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="UpArrow" BorderThickness="2" Margin="2">
							</RepeatButton>
							<Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb Style="{StaticResource ScrollBarThumb}" Themes:ScrollChrome.ScrollGlyph="VerticalGripper" BorderThickness="1" Margin="3,0"/>
								</Track.Thumb>
							</Track>
							<RepeatButton x:Name="BottomButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="DownArrow" BorderThickness="2" Margin="2"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="Background">
									<Setter.Value>
										<LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
											<GradientStop Color="DimGray" Offset="0"/>
											<GradientStop Color="#FF828282" Offset="1"/>
											<GradientStop Color="#FF646464" Offset="0.241"/>
										</LinearGradientBrush>
									</Setter.Value>
								</Setter>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Horizontal">
					<Setter Property="Width" Value="Auto"/>
					<Setter Property="MinWidth" Value="0"/>
					<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
					<Setter Property="MinHeight" Value="10"/>					
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ScrollBar}">
								<Grid x:Name="Bg" SnapsToDevicePixels="true">
									<Grid.ColumnDefinitions>
										<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
										<ColumnDefinition Width="0.00001*"/>
										<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
									</Grid.ColumnDefinitions>
									<Border x:Name="Background" Grid.ColumnSpan="3" CornerRadius="2">
										<Border.Background>
											<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
												<GradientStop Color="#FF373737" Offset="0"/>
												<GradientStop Color="#FF323232" Offset="0.2"/>
												<GradientStop Color="#FF505050" Offset="1"/>
											</LinearGradientBrush>
										</Border.Background></Border>
									<RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="LeftArrow" BorderThickness="4"/>
									<Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
										<Track.DecreaseRepeatButton>
											<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb Style="{StaticResource ScrollBarThumb}" Themes:ScrollChrome.ScrollGlyph="HorizontalGripper" BorderThickness="4" Margin="0,3"/>
										</Track.Thumb>
									</Track>
									<RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="RightArrow" BorderThickness="4"/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Background" TargetName="Background">
											<Setter.Value>
												<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
													<GradientStop Color="DimGray" Offset="0"/>
													<GradientStop Color="#FF646464" Offset="0.2"/>
													<GradientStop Color="#FF828282" Offset="1"/>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>										
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!--ScrollViewer Style-->
    	<ControlTemplate x:Key="MFMScrollViewer" TargetType="{x:Type ScrollViewer}">
    		<Grid x:Name="Grid" Background="{TemplateBinding Background}">
    			<Grid.ColumnDefinitions>
    				<ColumnDefinition Width="*"/>
    				<ColumnDefinition Width="Auto"/>
    			</Grid.ColumnDefinitions>
    			<Grid.RowDefinitions>
    				<RowDefinition Height="*"/>
    				<RowDefinition Height="Auto"/>
    			</Grid.RowDefinitions>
    			<Rectangle x:Name="Corner" Grid.Column="1" Fill="{x:Null}" Grid.Row="1"/>
    			<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
    			<ScrollBar x:Name="PART_VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Background="#FFFFA000" Style="{DynamicResource MFMScrollBarStyle}" Width="12"/>
    			<ScrollBar x:Name="PART_HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Background="#FFFFA000" Style="{DynamicResource MFMScrollBarStyle}" Height="12"/>
    		</Grid>
    	</ControlTemplate>

		<!--ProgessBar Style-->
    	<LinearGradientBrush x:Key="ProgressBarBackground" EndPoint="1,0" StartPoint="0,0">
    		<GradientStop Color="#BABABA" Offset="0"/>
    		<GradientStop Color="#C7C7C7" Offset="0.5"/>
    		<GradientStop Color="#BABABA" Offset="1"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="ProgressBarBorderBrush" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="#B2B2B2" Offset="0"/>
    		<GradientStop Color="#8C8C8C" Offset="1"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="ProgressBarGlassyHighlight" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="#50FFFFFF" Offset="0.5385"/>
    		<GradientStop Color="#00FFFFFF" Offset="0.5385"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="ProgressBarTopHighlight" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="#80FFFFFF" Offset="0.05"/>
    		<GradientStop Color="#00FFFFFF" Offset="0.25"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" EndPoint="1,0" StartPoint="0,0">
    		<GradientStop Color="#00FFFFFF" Offset="0"/>
    		<GradientStop Color="#60FFFFFF" Offset="0.4"/>
    		<GradientStop Color="#60FFFFFF" Offset="0.6"/>
    		<GradientStop Color="#00FFFFFF" Offset="1"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeft" EndPoint="1,0" StartPoint="0,0">
    		<GradientStop Color="#0C000000" Offset="0"/>
    		<GradientStop Color="#20000000" Offset="0.3"/>
    		<GradientStop Color="#00000000" Offset="1"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRight" EndPoint="1,0" StartPoint="0,0">
    		<GradientStop Color="#00000000" Offset="0"/>
    		<GradientStop Color="#20000000" Offset="0.7"/>
    		<GradientStop Color="#0C000000" Offset="1"/>
    	</LinearGradientBrush>
    	<RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeft" RadiusY="1" RadiusX="1" RelativeTransform="1,0,0,1,0.5,0.5">
    		<GradientStop Color="#60FFFFC4" Offset="0"/>
    		<GradientStop Color="#00FFFFC4" Offset="1"/>
    	</RadialGradientBrush>
    	<LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffect" EndPoint="0,0" StartPoint="0,1">
    		<GradientStop Color="#60FFFFC4" Offset="0"/>
    		<GradientStop Color="#00FFFFC4" Offset="1"/>
    	</LinearGradientBrush>
    	<RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRight" RadiusY="1" RadiusX="1" RelativeTransform="1,0,0,1,-0.5,0.5">
    		<GradientStop Color="#60FFFFC4" Offset="0"/>
    		<GradientStop Color="#00FFFFC4" Offset="1"/>
    	</RadialGradientBrush>
    	<LinearGradientBrush x:Key="ProgressBarIndicatorGlassyHighlight" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="#90FFFFFF" Offset="0.5385"/>
    		<GradientStop Color="#00FFFFFF" Offset="0.5385"/>
    	</LinearGradientBrush>
    	<Style x:Key="MFMProgressBarStyle" TargetType="{x:Type ProgressBar}">
    		<Setter Property="Foreground" Value="#01D328"/>
    		<Setter Property="Background" Value="{StaticResource ProgressBarBackground}"/>
    		<Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderBrush}"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ProgressBar}">
    					<Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
    						<Rectangle RadiusY="2" RadiusX="2" Fill="{x:Null}"/>
							<!--Background = "{StaticResource ProgressBarGlassyHighlight}"-->
    						<Border CornerRadius="2" BorderThickness="1">
    							<Border.Effect>
    								<DropShadowEffect BlurRadius="10" Direction="270" ShadowDepth="2"/>
    							</Border.Effect>
    							<Border.BorderBrush>
    								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    									<GradientStop Color="#FF191919" Offset="0"/>
    									<GradientStop Color="#FF4B4B4B" Offset="1"/>
    									<GradientStop Color="Black" Offset="0.25"/>
    								</LinearGradientBrush>
    							</Border.BorderBrush>
    							<Border.Background>
    								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    									<GradientStop Color="#FF4B4B4B" Offset="0"/>
    									<GradientStop Color="#FF646464" Offset="1"/>
    									<GradientStop Color="#FF323232" Offset="0.25"/>
    								</LinearGradientBrush>
    							</Border.Background>
    						</Border>
							<!--Background="{StaticResource ProgressBarTopHighlight}"-->
    						<Rectangle x:Name="PART_Track" Margin="1" RadiusX="1.5" RadiusY="1.5"/>
    						<Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" Margin="1">
    							<Grid x:Name="Foreground">
    								<Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="1.5" RadiusY="1.5"/>
    								<Grid x:Name="Animation" ClipToBounds="true">
    									<!--Fill="{StaticResource ProgressBarIndicatorAnimatedFill}"-->
    									<Rectangle x:Name="PART_GlowRect" HorizontalAlignment="Left" Margin="-100,0,0,0" Width="100" RadiusX="2" RadiusY="2"/>
    								</Grid>
    								<Grid x:Name="Overlay">
    									<Grid.ColumnDefinitions>
    										<ColumnDefinition MaxWidth="15"/>
    										<ColumnDefinition Width="0.1*"/>
    										<ColumnDefinition MaxWidth="15"/>
    									</Grid.ColumnDefinitions>
    									<Grid.RowDefinitions>
    										<RowDefinition/>
    										<RowDefinition/>
    									</Grid.RowDefinitions>
										<!--Fill="{StaticResource ProgressBarIndicatorDarkEdgeLeft}"-->
    									<Rectangle x:Name="LeftDark" Margin="1,1,0,1" RadiusY="1" RadiusX="1" Grid.RowSpan="2"/>
										<!--Fill="{StaticResource ProgressBarIndicatorDarkEdgeRight}"-->
    									<Rectangle x:Name="RightDark" Grid.Column="2" Margin="0,1,1,1" RadiusY="1" RadiusX="1" Grid.RowSpan="2"/>
										<!--Fill="{StaticResource ProgressBarIndicatorLightingEffectLeft}"-->
    									<Rectangle x:Name="LeftLight" Grid.Column="0" Grid.Row="2"/>
										<!--Fill="{StaticResource ProgressBarIndicatorLightingEffect}"-->
    									<Rectangle x:Name="CenterLight" Grid.Column="1" Grid.Row="2"/>
										<!--Fill="{StaticResource ProgressBarIndicatorLightingEffectRight}"-->
    									<Rectangle x:Name="RightLight" Grid.Column="2" Grid.Row="2"/>
										<!--Background="{StaticResource ProgressBarIndicatorGlassyHighlight}"-->
    									<Border x:Name="Highlight1" Grid.ColumnSpan="3" Grid.RowSpan="2" CornerRadius="1.5">
    										<Border.Background>
    											<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    												<GradientStop Color="#00000000" Offset="0"/>
    												<GradientStop Color="#7F000000" Offset="1"/>
    												<GradientStop Color="#99000000" Offset="0.75"/>
    											</LinearGradientBrush>
    										</Border.Background>
    									</Border>
										<!--Background="{StaticResource ProgressBarTopHighlight}"-->
    									<Border x:Name="Highlight2" Grid.ColumnSpan="3" Grid.RowSpan="2" CornerRadius="2"/>
    								</Grid>
    							</Grid>
    						</Decorator>
    						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="Orientation" Value="Vertical">
    							<Setter Property="LayoutTransform" TargetName="TemplateRoot">
    								<Setter.Value>
    									<RotateTransform Angle="-90"/>
    								</Setter.Value>
    							</Setter>
    						</Trigger>
    						<Trigger Property="IsIndeterminate" Value="true">
    							<Setter Property="Visibility" TargetName="LeftDark" Value="Collapsed"/>
    							<Setter Property="Visibility" TargetName="RightDark" Value="Collapsed"/>
    							<Setter Property="Visibility" TargetName="LeftLight" Value="Collapsed"/>
    							<Setter Property="Visibility" TargetName="CenterLight" Value="Collapsed"/>
    							<Setter Property="Visibility" TargetName="RightLight" Value="Collapsed"/>
    							<Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
    						</Trigger>
    						<Trigger Property="IsIndeterminate" Value="false">
    							<!--<Setter Property="Background" TargetName="Animation" Value="#80B5FFA9"/>-->
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<ControlTemplate x:Key="HorizentalSliderThumbDisabledStyle" TargetType="{x:Type Thumb}">
    		<Canvas SnapsToDevicePixels="true">
    			<Canvas.RenderTransform>
    				<TranslateTransform X="5.5" Y="11"/>
    			</Canvas.RenderTransform>
    			<Border x:Name="Background" Height="16" Canvas.Left="-4" Canvas.Top="-8" Width="16" CornerRadius="8" Background="{DynamicResource HorizontalSliderThumbNormalBackground}">
    				<Border.Effect>
    					<DropShadowEffect BlurRadius="5" Direction="270" ShadowDepth="2"/>
    				</Border.Effect>
    			</Border>
    			<Ellipse x:Name="Glow" Height="8" Canvas.Left="0" Canvas.Top="-4" Width="8" Fill="{DynamicResource HorizentalSliderThumbGlowBackground}"/>
    		</Canvas>
    		<ControlTemplate.Triggers>
    			<Trigger Property="IsMouseOver" Value="true"/>
    			<Trigger Property="IsDragging" Value="true"/>
    			<Trigger Property="IsEnabled" Value="false">
    				<Setter Property="Background" TargetName="Background" Value="{DynamicResource HorizentalSliderThumbDisabledBackground}"/>
    			</Trigger>
    		</ControlTemplate.Triggers>
    	</ControlTemplate>
    	<Style x:Key="MFMButtonSquareStyle" TargetType="{x:Type Button}">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Button}">    					
    					<Grid>
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualStateGroup.Transitions>
    									<VisualTransition GeneratedDuration="0:0:0.2"/>
    									<VisualTransition GeneratedDuration="0" To="Pressed"/>
    								</VisualStateGroup.Transitions>
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="MouseOver">
    									<Storyboard>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Animation">
    											<EasingColorKeyFrame KeyTime="0" Value="#FFFF6400"/>
    										</ColorAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Pressed">
    									<Storyboard>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Animation">
    											<EasingColorKeyFrame KeyTime="0" Value="#FF0064FF"/>
    										</ColorAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Disabled">
    									<Storyboard>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Animation">
    											<EasingColorKeyFrame KeyTime="0" Value="#FFC8C8C8"/>
    										</ColorAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Border x:Name="Background" Background="{TemplateBinding BorderBrush}" CornerRadius="0"/>
    						<Border x:Name="Inner" Margin="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0"/>
    						<Border x:Name="Animation" CornerRadius="0" Margin="{TemplateBinding BorderThickness}" BorderBrush="Black" Background="#00000000"/>
    						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    						<Border x:Name="glow" CornerRadius="0" Margin="{TemplateBinding BorderThickness}">
    							<Border.Background>
    								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    									<GradientStop Color="#00000000" Offset="0"/>
    									<GradientStop Color="#7F000000" Offset="1"/>
    									<GradientStop Color="#99000000" Offset="0.75"/>
    								</LinearGradientBrush>
    							</Border.Background>
    						</Border>
    					</Grid>
    					<ControlTemplate.Triggers>    						
    						<Trigger Property="IsFocused" Value="True"/>
    						<Trigger Property="IsDefaulted" Value="True"/>
    						<Trigger Property="IsMouseOver" Value="True"/>    						
    						<Trigger Property="IsPressed" Value="True"/>
    						<Trigger Property="IsEnabled" Value="False"/>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>    	      
         
    </Application.Resources>
</Application>
